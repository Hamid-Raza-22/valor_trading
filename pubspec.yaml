name: valor_trading
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+5


environment:
  sdk: '>=3.1.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.

  cupertino_icons: ^1.0.6 # Cupertino icons for iOS style widgets
  firebase_core: ^3.2.0 # Core functionality for Firebase in Flutter
  get: ^4.6.6 # State management, dependency injection, and route management library
  printing: ^5.7.2 # Library for printing documents
  sqflite: ^2.3.0 # SQLite plugin for Flutter to work with local databases
  chat_gpt_sdk: ^2.2.5 # SDK for integrating ChatGPT
  path_provider: ^2.0.5 # Provides commonly used locations for storing files
  shared_preferences: ^2.2.2 # For storing key-value pairs locally on the device
  fluttertoast: ^8.1.1 # For displaying toast messages
  provider: ^6.0.5 # State management library
  sqflite_common_ffi: ^2.3.0+2 # Common SQLite FFI library
  http: ^1.1.0 # HTTP requests library
  http_parser: ^4.0.2 # HTTP request and response parser
  path: ^1.8.3 # For manipulating file paths
  dropdown_search: ^5.0.2 # Dropdown search widget for Flutter
  dropdown_button2: ^2.3.9 # Enhanced dropdown button widget
  flutter_typeahead: ^4.8.0 # Typeahead (autocomplete) functionality for text fields
  timezone_utc_offset: # For calculating the time zone UTC offset
  nanoid: ^1.0.0 # For generating unique IDs
  image_picker: ^0.8.0+4 # For picking images from gallery or camera
  google_maps_flutter: ^2.3.0 # Google Maps widget for Flutter
  geolocator: ^11.0.0 # For accessing geolocation and handling geocoding
  expandable: ^5.0.1 # For creating expandable widgets
  hive: ^2.2.3 # Lightweight and fast key-value database
  typed_data: ^1.3.2 # For handling typed data
  timezone: ^0.9.2 # For managing time zone conversions
  pdf: ^3.10.6 # For generating PDF documents
  share: ^2.0.4 # For sharing content
#  connectivity: ^3.0.6 # For checking network connectivity
#  cloudinary_public: ^0.23.1 # Cloudinary API for media management
#  cloudinary_flutter: ^1.2.0 # Flutter integration for Cloudinary
#  cloudinary: ^1.2.0 # Cloudinary library for Dart
  cloud_functions: ^5.0.3 # For using Firebase Cloud Functions
  location: ^5.0.3 # For accessing location services
  cloud_firestore: ^5.1.0 # Firestore database integration
  permission_handler: ^10.3.0 # For handling app permissions
  firebase_auth: ^5.1.2 # Firebase Authentication integration
  gpx: ^2.2.1 # For handling GPX file operations
  flutter_launcher_icons: ^0.13.1 # For configuring app launcher icons
  flutter_background: ^1.2.0 # For running code in the background
  xml: ^6.4.2 # For working with XML data
  file_picker: ^6.1.1 # For picking files from the file system
  intl: ^0.18.0 # For internationalization and localization
  flutter_image_compress: ^2.1.0 # For compressing images
  android_alarm_manager_plus: ^3.0.4 # For scheduling tasks on Android
  android_intent_plus: ^4.0.3 # For using Android Intents
  workmanager: ^0.5.2 # For background work scheduling
  flutter_background_service: ^5.0.5 # For running background services
  flutter_background_service_android: ^6.2.2 # Android-specific background service functionality
  flutter_local_notifications: ^17.2.3 # For displaying local notifications
  device_info_plus: ^9.1.1 # For getting device information
  isolate: ^2.1.1 # For concurrent programming using isolates
  geocoding: ^2.1.1 # For geocoding addresses
  oauth2: ^2.0.0 # OAuth2 client for authentication
  background_locator_2: ^2.0.6 # For location tracking in the background
  carp_background_location: ^4.0.0 # For background location tracking
  url_launcher: ^6.2.4 # For launching URLs in the browser
  internet_connection_checker: ^0.0.1+2 # For checking internet connectivity
  metaxperts_valor_trading_dynamic_apis: # Custom API library for the project
    git:
      url: https://github.com/Hamid-Raza-22/metaxperts_valor_trading_dynamic_apis.git
  flutter_easyloading: ^3.0.5 # For displaying loading indicators
  upgrader: ^9.0.0 # For handling app upgrades
  data_connection_checker_nulls: ^0.0.2 # For checking data connections with null safety
  internet_connection_checker_plus: ^2.2.0 # Enhanced internet connection checker
  riverpod: ^2.5.1 # State management library
  flutter_riverpod: ^2.5.1 # Flutter integration for Riverpod
  in_app_update: ^4.2.3 # For handling in-app updates
  hive_flutter: ^1.1.0 # Flutter integration for Hive database
  serverpod: ^2.0.2 # For building backend servers in Dart
  synchronized: ^3.1.0+1 # For synchronization primitives
  mutex: ^3.1.0 # For mutual exclusion locks
  flutter_svg: ^2.0.10+1 # For rendering SVG images
  loading_animation_widget: ^1.2.1 # For displaying loading animations
  connectivity_plus: ^6.0.5 # Enhanced connectivity library



dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/images/courage.jpeg
    - assets/images/mxlogo-01.png
    - assets/images/p2.png
    - assets/images/p1.png
    - assets/images/b1.png
    - assets/images/mxlogo-01.png
    - assets/icons/shop_icon.svg
    - assets/icons/shop-svg-3.png
    - assets/icons/OIP.png
    - assets/icons/avatar3.png
    - assets/images/WhatsApp Image 2023-11-24 at 11.13.50 AM.jpeg
    - shorebird.yaml

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
